apiVersion: apps/v1
kind: Deployment
metadata:
  name: role-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: role-registry
  template:
    metadata:
      labels:
        app: role-registry
    spec:
      containers:
      - name: role-registry
        image: role-registry:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGO_URL
          value: "mongodb://role-registry-mongo:27017/role_registry"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: role-registry
spec:
  selector:
    app: role-registry
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: role-registry-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: role-registry-mongo
  template:
    metadata:
      labels:
        app: role-registry-mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: role-registry-mongo
spec:
  selector:
    app: role-registry-mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
