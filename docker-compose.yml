version: '3.8'

services:
  mgtl-plus:
    build:
      context: ./services/mgtl-plus
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - role-registry
      - swarm-manager
      - resource-allocator
      - execution-engine
      - feedback-engine
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  role-registry:
    build:
      context: ./services/role-registry
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - MONGO_URL=mongodb://role-registry-mongo:27017/role_registry
    depends_on:
      - role-registry-mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  role-registry-mongo:
    image: mongo:5
    container_name: role-registry-mongo
    ports:
      - "27017:27017"
    volumes:
      - role-registry-mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  feedback-engine:
    build:
      context: ./services/feedback-engine
      dockerfile: Dockerfile
    ports:
      - "3006:3000"
    environment:
      - MONGO_URL=mongodb://feedback-engine-mongo:27017/feedback_engine
    depends_on:
      - feedback-engine-mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  feedback-engine-mongo:
    image: mongo:5
    container_name: feedback-engine-mongo
    ports:
      - "27018:27017"
    volumes:
      - feedback-engine-mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  swarm-manager:
    build:
      context: ./services/swarm-manager
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  resource-allocator:
    build:
      context: ./services/resource-allocator
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  execution-engine:
    build:
      context: ./services/execution-engine
      dockerfile: Dockerfile
    ports:
      - "3005:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  capability-registry:
    build:
      context: ./services/capability-registry
      dockerfile: Dockerfile
    ports:
      - "3007:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  objective-hub:
    build:
      context: ./services/objective-hub
      dockerfile: Dockerfile
    ports:
      - "3008:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  governance-hooks:
    build:
      context: ./services/governance-hooks
      dockerfile: Dockerfile
    ports:
      - "3009:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  web-vite:
    build:
      context: ./web-vite
      dockerfile: Dockerfile
    ports:
      - "3011:3011"
    restart: unless-stopped
    networks:
      - default

volumes:
  role-registry-mongo-data:
  feedback-engine-mongo-data:

networks:
  default:
    driver: bridge